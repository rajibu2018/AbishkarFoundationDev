@model AbishkarFoundation.Web.ViewModel.Module.TestSetCreateViewModel
@using  AbishkarFoundation.Model
@{
    ViewData["Title"] = "AddModule";
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";
}

<div class="breadcrumb"><a href="@Url.Action("Index", "Teacher")">Home</a><span>/</span><a href="@Url.Action("Index", "Module")">Module</a><span>/</span><span>@Model.ViewName</span></div>
<div class="card card-login mx-auto mt-5 login dataDiv">
    <div class="card-header">Modules</div>
    <div class="card-body">
        @using (Html.BeginForm("SaveModule", "Module", FormMethod.Post))
        {
            <div class="col-lg-12">
                <div class="form-group">
                    @Html.HiddenFor(m => m.TestSetId)
                    @Html.HiddenFor(m => m.CreateDate)
                    @Html.HiddenFor(m => m.CreatorId)

                    @Html.LabelFor(m => m.TestName)
                    @Html.TextBoxFor(m => m.TestName, new { placeholder = "Enter Test name", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TestName)
                </div>
                <div class="form-group col-lg-6">
                    @Html.LabelFor(m => m.AccessType)
                    @Html.RadioButtonFor(s => s.AccessType, TestSetAccessType.Public, new { id = "Public" })<label for="Public">Public</label>
                    @Html.RadioButtonFor(s => s.AccessType, TestSetAccessType.Public, new { id = "Private" })<label for="Private">Private</label>
                </div>
                <div class="form-group col-lg-6">
                    @Html.LabelFor(m => m.RepeatedAccess)
                    @Html.CheckBoxFor(s => s.RepeatedAccess, new { id = "RepeatedAccess" })<label for="RepeatedAccess">Repeated Access</label>
                </div>
                <div class="form-group  col-lg-6">
                    @Html.LabelFor(m => m.Duration)
                    @Html.TextBoxFor(m => m.Duration, new { placeholder = "Enter Duration", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Duration)
                </div>
                <div class="form-group  col-lg-6">
                    @Html.LabelFor(m => m.ActiveUpto)
                    @Html.TextBoxFor(model => model.ActiveUpto, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here..." , type = "date" })
                    @Html.ValidationMessageFor(m => m.ActiveUpto)
                </div>
                <div class="form-group">
                    @if (Model.ViewName == "Add Module")
                    {
                        <input type="submit" class="btn btn-success" value="Create Test" />
                    }
                    else
                    {
                        <input type="submit" class="btn btn-success" value="Update Test" />
                    }
                    <a class="btn" href="@Url.Action("Index","Module")">Cancel</a>
                </div>
            </div>
        }
    </div>
</div>
